import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a,b as s,d as t,o}from"./app-Bt3I4fzD.js";const p="/assets/image-20240911152454249-CBe8ZlPU.png",n="/assets/image-20240911170245805-BlJWWO-T.png",r="/assets/image-20240911171006877--bf4pkyE.png",h="/assets/image-20240911171101434-DTARtUcL.png",c="/assets/image-20240911171914969-PK4VG-3n.png",m="/assets/image-20240911200610450-B8braOp3.png",d="/assets/image-20240911200639739-BgAx9YUV.png",g="/assets/image-20240911211031762-B6lqQHzb.png",u="/assets/image-20240911211050945-J6fU0zMG.png",b="/assets/image-20240911210911897-BIIc8hhF.png",_="/assets/image-20240912103858957-23RCmTSa.png",f="/assets/image-20240912120211110-DsY31QDz.png",y="/assets/image-20240912165320833-Dmo2UJPS.png",x="/assets/image-20240922154032835-BAFTCSr1.png",k="/assets/image-20240922154211688-CJMXuUkh.png",z="/assets/image-20240912165635868-BibmGGIY.png",q="/assets/image-20240912165823308-CSYSber_.png",B="/assets/image-20240922154734638-aJ0hRexc.png",C="/assets/image-20240922161533016-WsGhVDb9.png",E="/assets/image-20250216154315408-CFxyn2z6.png",P="/assets/image-20250216154403084-Cnl0ta-7.png",U={};function T(A,l){return o(),e("div",null,[l[0]||(l[0]=a("h1",{id:"计算机操作系统概述",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#计算机操作系统概述"},[a("span",null,"计算机操作系统概述")])],-1)),l[1]||(l[1]=a("ul",null,[a("li",null,"用户与计算机硬件系统之间的接口")],-1)),l[2]||(l[2]=a("figure",null,[a("img",{src:p,alt:"image-20240911152454249",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image-20240911152454249")],-1)),l[3]||(l[3]=a("ul",null,[a("li",null,"计算机系统资源的管理者"),a("li",null,"实现对计算机资源的抽象")],-1)),s(" more "),l[4]||(l[4]=t('<h2 id="发展与分类" tabindex="-1"><a class="header-anchor" href="#发展与分类"><span>发展与分类</span></a></h2><h3 id="人工操作" tabindex="-1"><a class="header-anchor" href="#人工操作"><span>人工操作</span></a></h3><blockquote><p>通过纸袋打孔编写程序</p></blockquote><img src="'+n+'" alt="image-20240911170245805" style="zoom:33%;"><p>缺点：</p><ol><li>用户独占全机</li><li>人机速度矛盾导致资源利用率极低</li></ol><h3 id="单道批处理系统" tabindex="-1"><a class="header-anchor" href="#单道批处理系统"><span>单道批处理系统</span></a></h3><blockquote><p>引入脱机输入/输出技术，由监督程序控制，按顺序连续处理程序</p><p>脱机输入/输出：将纸带上数据输入到磁带上，CPU需要时高速调用，输出时再高速输送至磁带</p></blockquote><img src="'+r+'" alt="image-20240911171006877" style="zoom:33%;"><img src="'+h+'" alt="image-20240911171101434" style="zoom:33%;"><img src="'+c+'" alt="image-20240911171914969" style="zoom:67%;"><p>改善：</p><ol><li>减少了CPU空闲时间</li><li>提高了I/O速度</li></ol><p>缺点：</p><ol><li>CPU利用率较低</li></ol><h3 id="多道批处理系统" tabindex="-1"><a class="header-anchor" href="#多道批处理系统"><span>多道批处理系统</span></a></h3><blockquote><p>多道程序并发执行</p></blockquote><p>非抢占式：完整执行进程某一阶段</p><img src="'+m+'" alt="image-20240911200610450" style="zoom:50%;"><p>抢占式：按绝对次序执行</p><img src="'+d+'" alt="image-20240911200639739" style="zoom:50%;"><p>改善：</p><ol><li>资源利用率提高</li><li>系统吞吐量大</li></ol><p>缺点：</p><ol><li>平均周转时间较长</li><li>无交互能力</li></ol><h3 id="分时操作系统" tabindex="-1"><a class="header-anchor" href="#分时操作系统"><span>分时操作系统</span></a></h3><blockquote><p>以时间片为单位轮流为用户服务</p></blockquote><p>特点：</p><ol><li>多路性：允许多个用户共享一台计算机</li><li>独立性：每个用户之间互不干扰</li><li>及时性：在极短时间内获得响应</li><li>交互性：人机交互</li></ol><p>缺点：</p><ol><li>不能优先处理紧急任务</li></ol><h3 id="实时操作系统" tabindex="-1"><a class="header-anchor" href="#实时操作系统"><span>实时操作系统</span></a></h3><blockquote><p>对接受到的信号及时处理，并在时限内完成</p></blockquote><ul><li><p>周期性实时任务：外部设备周期性的发出信号给计算机，要求按指定周期循环执行</p></li><li><p>非周期性实时任务：带有截止时间</p><ul><li>开始截止时间：在指定时间之前开始</li><li>完成截止时间：在指定时间之前完成</li></ul></li><li><p>硬实时任务：必须满足截止时间要求</p><blockquote><p>工业、武器控制、自动驾驶</p></blockquote></li><li><p>软实时任务：对截止时间要求不严格</p><blockquote><p>查询系统、多媒体</p></blockquote></li></ul><p>优点：</p><ol><li>及时性：优先响应紧急任务</li><li>可靠性：采取多级容错措施</li></ol><h2 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性</span></a></h2><h3 id="并发" tabindex="-1"><a class="header-anchor" href="#并发"><span>并发</span></a></h3><ul><li>并发：在一时间间隔内，单核执行多项任务</li><li>并行：在同一时间，多核同时执行不同任务</li></ul><h3 id="共享" tabindex="-1"><a class="header-anchor" href="#共享"><span>共享</span></a></h3><ul><li><p>互斥访问：一段时间内只允许一个进程访问资源</p><blockquote><p>摄像头、麦克风</p></blockquote></li><li><p>同时访问：一段时间内允许多个进程并发访问资源</p><blockquote><p>文件下载上传</p></blockquote></li></ul><h3 id="虚拟" tabindex="-1"><a class="header-anchor" href="#虚拟"><span>虚拟</span></a></h3><ul><li><p>时分复用：多进程并发执行</p></li><li><p>空分复用：根据程序运行情况，只将部分调入内存</p></li></ul><h3 id="异步" tabindex="-1"><a class="header-anchor" href="#异步"><span>异步</span></a></h3><ul><li>多道程序并发执行争抢有限系统资源，导致进程以不可预知的速度推进</li></ul><h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能"><span>功能</span></a></h2><h3 id="处理机管理" tabindex="-1"><a class="header-anchor" href="#处理机管理"><span>处理机管理</span></a></h3><ul><li><p>进程控制：为作业创建进程，撤销已经完成的进程，控制进程在运行中的状态转换</p></li><li><p>进程同步：为多个进程的运行进行协调</p></li><li><p>进程通信：一组相互合作的进程去完成同一个任务时交换信息</p></li><li><p>调度：</p><ul><li>作业调度：从后备队列中按一定算法选出若干作业，并为其分配资源后插入就绪队列</li><li>内存调度：将挂起状态的进程由外存调入到内存</li><li>进程调度：按一定算法从就绪队列选出一个进程，分配处理机运行</li></ul></li></ul><h3 id="存储器管理" tabindex="-1"><a class="header-anchor" href="#存储器管理"><span>存储器管理</span></a></h3><ul><li><p>内存分配：为每道程序分配内存空间、提高存储器利用率、允许运行的程序申请附加内存空间</p></li><li><p>内存保护：确保用户程序只在自己的内存空间运行，不允许访问操作系统程序和数据以及转移到非共享用户程序中执行</p></li><li><p>地址映射：程序的逻辑地址与内存空间对应物理地址的映射</p></li><li><p>内存扩充：从逻辑上扩充内存容量</p></li></ul><h3 id="文件管理" tabindex="-1"><a class="header-anchor" href="#文件管理"><span>文件管理</span></a></h3><ul><li>文件存储空间管理：文件所需空间的分配与回收，同时记录文件存储空间的使用情况</li><li>目录管理：为每个文件建立目录项；文件共享；目录查询</li><li>文件读/写管理：根据文件名检索文件位置，再利用读/写指针对文件进行操作</li><li>文件保护：防止未验证用户存取文件；防止冒名顶替存取文件；防止不正确方式使用文件</li></ul><h3 id="设备管理" tabindex="-1"><a class="header-anchor" href="#设备管理"><span>设备管理</span></a></h3><ul><li><p>缓冲管理：缓解CPU与I/O设备速度不匹配问题</p><ul><li><p>单缓冲机制</p><img src="'+g+'" alt="image-20240911211031762" style="zoom:50%;"></li><li><p>双缓冲机制</p><img src="'+u+'" alt="image-20240911211050945" style="zoom:50%;"></li><li><p>公共缓冲池机制</p></li></ul><img src="'+b+'" alt="image-20240911210911897" style="zoom:50%;"></li><li><p>设备分配：设备的分配与回收</p></li><li><p>设备处理：CPU与设备控制器的通信</p></li></ul><h2 id="接口类型" tabindex="-1"><a class="header-anchor" href="#接口类型"><span>接口类型</span></a></h2><ul><li><p>用户接口</p><ul><li>图形用户接口：使用户方便快捷的对程序和文件进行操作</li><li>联机用户接口：交互式</li><li>脱机用户接口：批处理</li></ul></li><li><p>程序接口：通过系统调用使用程序接口，用户不能直接使用，只能通过程序代码间接使用</p></li></ul><h2 id="运行机制" tabindex="-1"><a class="header-anchor" href="#运行机制"><span>运行机制</span></a></h2><img src="'+_+'" alt="image-20240912103858957" style="zoom:50%;"><blockquote><p>用户态=目态、核心态=内核态=管态</p></blockquote><p>程序状态字PSW：用一个二进制位区分用户态和核心态</p><img src="'+f+'" alt="image-20240912120211110" style="zoom:50%;"><blockquote><p>陷入指令=trap指令=访管指令</p></blockquote><h3 id="中断机制" tabindex="-1"><a class="header-anchor" href="#中断机制"><span>中断机制</span></a></h3><blockquote><p>内核夺回CPU控制权的唯一途径</p></blockquote><h4 id="异常" tabindex="-1"><a class="header-anchor" href="#异常"><span>异常</span></a></h4><ol><li>用户态下执行特权指令</li><li>输入非法参数</li><li>执行陷入指令进行系统调用</li><li>故障</li></ol><h4 id="中断" tabindex="-1"><a class="header-anchor" href="#中断"><span>中断</span></a></h4><ol><li>时钟中断：时钟部件的并发控制</li><li>I/O中断：设备任务完成</li></ol><h3 id="系统调用" tabindex="-1"><a class="header-anchor" href="#系统调用"><span>系统调用</span></a></h3><img src="'+y+'" alt="image-20240912165320833" style="zoom:50%;"><h2 id="体系结构" tabindex="-1"><a class="header-anchor" href="#体系结构"><span>体系结构</span></a></h2><h3 id="分层结构" tabindex="-1"><a class="header-anchor" href="#分层结构"><span>分层结构</span></a></h3><img src="'+x+'" alt="image-20240922154032835" style="zoom:33%;"><p>优点：易于调试和验证，扩展方便</p><p>缺点：无法夸层调用效率低；无法明确定义每层边界</p><h3 id="模块化" tabindex="-1"><a class="header-anchor" href="#模块化"><span>模块化</span></a></h3><img src="'+k+'" alt="image-20240922154211688" style="zoom:33%;"><p>优点：各模块结构清晰；可动态加入新模块；模块间可直接调用效率高</p><p>缺点：模块接口定义未必合理实用；模块间相互依赖不易维护</p><h3 id="内核" tabindex="-1"><a class="header-anchor" href="#内核"><span>内核</span></a></h3><img src="'+z+'" alt="image-20240912165635868" style="zoom:25%;"><ul><li>大内核：将系统<strong>主要</strong>功能模块运行在内核态 <ul><li>优点：系统调用时CPU无需频繁切换状态，效率高</li><li>缺点：内核复杂不利维护和扩展，某一模块出问题可能影响整个系统，可靠性低</li></ul></li><li>微内核：将系统<strong>基本</strong>功能模块运行在内核态 <ul><li>优点：内核较小利于维护和扩展；可靠性高</li><li>缺点：系统调用CPU需频繁切换状态，效率低</li></ul></li></ul><img src="'+q+'" alt="image-20240912165823308" style="zoom:25%;"><h3 id="外核" tabindex="-1"><a class="header-anchor" href="#外核"><span>外核</span></a></h3><img src="'+B+'" alt="image-20240922154734638" style="zoom:25%;"><p>优点：可为进程分配未经抽象的硬件资源，使用更加灵活</p><p>缺点：增加了系统复杂性</p><h2 id="操作系统引导" tabindex="-1"><a class="header-anchor" href="#操作系统引导"><span>操作系统引导</span></a></h2><img src="'+C+'" alt="image-20240922161533016" style="zoom:33%;"><h2 id="虚拟机" tabindex="-1"><a class="header-anchor" href="#虚拟机"><span>虚拟机</span></a></h2><ul><li><p>第一类虚拟机管理程序（裸金属架构）</p><img src="'+E+'" alt="image-20250216154315408" style="zoom:33%;"><ul><li>直接运行在硬件之上，拥有最高权限，性能好</li><li>直接分配硬件资源</li></ul></li><li><p>第二类虚拟机管理程序（寄居架构）</p><img src="'+P+'" alt="image-20250216154403084" style="zoom:33%;"><ul><li>运行在宿主操作系统之上，性能差</li><li>分配的资源实际是宿主操作系统上的文件</li><li>方便移植，只需将操作系统导出为iso文件</li></ul></li></ul>',91))])}const Z=i(U,[["render",T]]),I=JSON.parse('{"path":"/posts/learning/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html","title":"计算机操作系统概述","lang":"zh-CN","frontmatter":{"icon":"book-open-reader","date":"2025-01-01T00:00:00.000Z","description":"用户与计算机硬件系统之间的接口 image-20240911152454249 计算机系统资源的管理者 实现对计算机资源的抽象","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"计算机操作系统概述\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-27T11:44:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"云烟驻\\",\\"url\\":\\"https://yunyin.pages.dev\\"}]}"],["meta",{"property":"og:url","content":"https://gitee.com/shadow-of-cloud/my-docs/posts/learning/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"博客主页"}],["meta",{"property":"og:title","content":"计算机操作系统概述"}],["meta",{"property":"og:description","content":"用户与计算机硬件系统之间的接口 image-20240911152454249 计算机系统资源的管理者 实现对计算机资源的抽象"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-27T11:44:54.000Z"}],["meta",{"property":"article:published_time","content":"2025-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-27T11:44:54.000Z"}]]},"git":{"createdTime":1745752597000,"updatedTime":1745754294000,"contributors":[{"name":"云影","username":"","email":"14521425+shadow-of-cloud@user.noreply.gitee.com","commits":3}]},"readingTime":{"minutes":6.66,"words":1997},"filePathRelative":"posts/learning/计算机操作系统.md","excerpt":"\\n<ul>\\n<li>用户与计算机硬件系统之间的接口</li>\\n</ul>\\n<figure><figcaption>image-20240911152454249</figcaption></figure>\\n<ul>\\n<li>计算机系统资源的管理者</li>\\n<li>实现对计算机资源的抽象</li>\\n</ul>\\n","autoDesc":true}');export{Z as comp,I as data};
