import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as s,b as n,d as l,o as t}from"./app-D9hHefKc.js";const r="/assets/image-20250515173331519-CFYIpM4e.png",p="/assets/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-05-14%20233756-B_dBv6wQ.png",h="/assets/image-20250515174925465-B3Sls-jN.png",d="/assets/image-20250515175122286-BwTYQewA.png",o="/assets/image-20250515175244212-D_T1ahYq.png",c="/assets/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-05-14%20235316-BVQFZ7PP.png",k="/assets/image-20250515175946631-BUCQSasW.png",g="/assets/image-20250515183026102-BPqs-aum.png",m="/assets/image-20250515183048454-BDXvsfQ9.png",b="/assets/image-20250515183440610-dvUUkKO_.png",u={};function v(y,i){return t(),a("div",null,[i[0]||(i[0]=s("h1",{id:"内网穿透实验",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#内网穿透实验"},[s("span",null,"内网穿透实验")])],-1)),i[1]||(i[1]=s("blockquote",null,[s("p",null,"建立与公网与私网的映射，使其它用户可以访问当前局域网主机")],-1)),n(" more "),i[2]||(i[2]=l(`<h2 id="服务端配置" tabindex="-1"><a class="header-anchor" href="#服务端配置"><span>服务端配置</span></a></h2><h3 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>docker</span></a></h3><ol><li><p>检查系统内核，docker要求内核大于3.10</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>设置阿里云镜像仓库（注意选择自己操作系统对应镜像仓库）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum-config-manager</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add-repo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>更新yum软件包索引</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> makecache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fast</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>安装docker引擎及扩展组件</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker-ce</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker-ce-cli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containerd.io</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker-buildx-plugin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker-compose-plugin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>设置阿里云源（速度较快）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/docker</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/docker/daemon.json</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt;-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&#39;EOF&#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;registry-mirrors&quot;: [&quot;https://jsodkx19.mirror.aliyuncs.com&quot;]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>重新加载配置并启动</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>验证docker是否正确安装</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker run hello-world</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx"><span>Nginx</span></a></h3><ol><li><p>安装Nginx</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>启动Nginx</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="lanproxy-server" tabindex="-1"><a class="header-anchor" href="#lanproxy-server"><span>lanproxy-server</span></a></h3><ol><li><p>下载docker镜像</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> franklin5/lanproxy-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>创建项目文件</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lanproxy</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lanproxy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>编写配置文件docker-compose.yml</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>version: &#39;3.1&#39;</span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span>  lanproxy-client:</span></span>
<span class="line"><span>    image: franklin5/lanproxy-server</span></span>
<span class="line"><span>    container_name: lanproxy-server</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>     - LANPROXY_USERNAME=admin</span></span>
<span class="line"><span>     - LANPROXY_PASSWORD=admin</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>     - 8090:8090</span></span>
<span class="line"><span>     - 4900:4900</span></span>
<span class="line"><span>     - 4993:4993</span></span>
<span class="line"><span>     - 9000-9100:9000-9100</span></span>
<span class="line"><span>    restart: always</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动服务</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>防火墙开放相关端口</p><p>![](../../.vuepress/public/images/屏幕截图 2025-05-14 233451-1747314591904.png)</p></li><li><p>访问8090端口登录</p><img src="`+r+'" alt="image-20250515173331519" style="zoom:50%;"></li><li><p>添加客户端并生成密钥，密钥后面要用</p><img src="'+p+'" alt="屏幕截图 2025-05-14 233756" style="zoom:50%;"></li></ol><h2 id="客户端配置" tabindex="-1"><a class="header-anchor" href="#客户端配置"><span>客户端配置</span></a></h2><h3 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>java</span></a></h3><ol><li><p>下载java开发工具包JDK：<a href="https://www.oracle.com/java/technologies/downloads/" target="_blank" rel="noopener noreferrer">https://www.oracle.com/java/technologies/downloads/</a></p></li><li><p>安装完成后添加环境变量</p><img src="'+h+'" alt="image-20250515174925465" style="zoom:50%;"><img src="'+d+'" alt="image-20250515175122286" style="zoom:50%;"></li><li><p>验证环境配置成功</p><img src="'+o+'" alt="image-20250515175244212" style="zoom:50%;"></li></ol><h3 id="lanproxy-client" tabindex="-1"><a class="header-anchor" href="#lanproxy-client"><span>lanproxy-client</span></a></h3><ol><li><p>下载客户端文件：<a href="https://github.com/frank-lam/lanproxy-client" target="_blank" rel="noopener noreferrer">https://github.com/frank-lam/lanproxy-client</a></p></li><li><p>修改配置文件distribution/proxy-client-0.1/conf/config.properties</p><img src="'+c+'" alt="屏幕截图 2025-05-14 235316" style="zoom:50%;"></li><li><p>使用Git运行start.sh启动客户端：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener noreferrer">https://git-scm.com/downloads</a></p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>客户端上线</p><p>![屏幕截图 2025-05-14 235800](../../.vuepress/public/images/屏幕截图 2025-05-14 235800-1747480024833.png)</p></li><li><p>配置映射端口</p><img src="'+g+'" alt="image-20250515183026102" style="zoom:50%;"></li><li><p>完成配置</p><figure><img src="'+m+'" alt="image-20250515183048454" tabindex="0" loading="lazy"><figcaption>image-20250515183048454</figcaption></figure></li><li><p>成功登录本地Web服务</p><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li></ol>',12))])}const f=e(u,[["render",v]]),x=JSON.parse('{"path":"/posts/project/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%AE%9E%E9%AA%8C.html","title":"内网穿透实验","lang":"zh-CN","frontmatter":{"icon":"project","date":"2025-05-15T00:00:00.000Z","star":true,"description":"建立与公网与私网的映射，使其它用户可以访问当前局域网主机","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内网穿透实验\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-17T11:08:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"云烟驻\\",\\"url\\":\\"https://yunyin.pages.dev\\"}]}"],["meta",{"property":"og:url","content":"https://gitee.com/shadow-of-cloud/my-docs/posts/project/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%AE%9E%E9%AA%8C.html"}],["meta",{"property":"og:site_name","content":"博客主页"}],["meta",{"property":"og:title","content":"内网穿透实验"}],["meta",{"property":"og:description","content":"建立与公网与私网的映射，使其它用户可以访问当前局域网主机"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-17T11:08:31.000Z"}],["meta",{"property":"article:published_time","content":"2025-05-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-17T11:08:31.000Z"}]]},"git":{"createdTime":1747305317000,"updatedTime":1747480111000,"contributors":[{"name":"云影","username":"","email":"14521425+shadow-of-cloud@user.noreply.gitee.com","commits":5}]},"readingTime":{"minutes":1.89,"words":566},"filePathRelative":"posts/project/内网穿透实验.md","excerpt":"\\n<blockquote>\\n<p>建立与公网与私网的映射，使其它用户可以访问当前局域网主机</p>\\n</blockquote>\\n","autoDesc":true}');export{f as comp,x as data};
