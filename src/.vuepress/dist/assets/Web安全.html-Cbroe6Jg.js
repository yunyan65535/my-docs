import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a,b as i,d as o,o as n}from"./app-C08J9FX8.js";const r="/assets/image-20240816181613150-DCVHVRui.png",p="/assets/image-20240816130953317-DTinzaU3.png",s="/assets/image-20240817131807571-D5vHcu1q.png",c="/assets/image-20240817140231108-rHBPH6g5.png",d="/assets/image-20240814174407348-DMEMw-BH.png",h="/assets/image-20240815120122419-_vTozFIc.png",b="/assets/image-20240815142528293-0I91QWdB.png",u="/assets/image-20240816081443537-CxCdsun8.png",m="/assets/image-20240816082440057-DfoVAQXh.png",k="/assets/image-20240816100627222-BfugWk01.png",f="/assets/image-20240816125807372-muuYVwRm.png",g={};function T(w,e){return n(),l("div",null,[e[0]||(e[0]=a("h1",{id:"web安全简介",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#web安全简介"},[a("span",null,"Web安全简介")])],-1)),e[1]||(e[1]=a("p",null,"d2Vi5a6J5YWo",-1)),e[2]||(e[2]=a("img",{src:r,alt:"image-20240816181613150",style:{zoom:"50%"}},null,-1)),i(" more "),e[3]||(e[3]=o('<h2 id="http协议" tabindex="-1"><a class="header-anchor" href="#http协议"><span>HTTP协议</span></a></h2><blockquote><p>Client-Server协议，只能由客户端发起服务器响应，浏览器作为用户代理发送请求</p></blockquote><h3 id="http请求" tabindex="-1"><a class="header-anchor" href="#http请求"><span>HTTP请求</span></a></h3><blockquote><p>HTTP头格式、个数、顺序会有差别</p><ol><li><p>不同代理</p></li><li><p>同一代理访问不同资源</p></li><li><p>不同场景</p></li></ol></blockquote><table><thead><tr><th>方法</th><th>功能</th></tr></thead><tbody><tr><td>OPTIONS</td><td>向服务器询问是否支持特定选项</td></tr><tr><td>GET</td><td>获取URI指定资源</td></tr><tr><td>HEAD</td><td>与GET类似，但服务器不返回实际内容</td></tr><tr><td>POST</td><td>向服务器提交数据</td></tr><tr><td>PUT</td><td>向指定URI存储文件</td></tr><tr><td>DELETE</td><td>删除URI指定的文件</td></tr><tr><td>TRACE</td><td>让服务器回显客户端请求内容</td></tr><tr><td>CONNECT</td><td>建立代理隧道</td></tr></tbody></table><p>注意事项：</p><ul><li>安全操作时既只读，使用GET或HEAD；有副作用操作时使用POST，如提交用户信息</li><li>PUT和DELETE用于直接的文件上传与删除，容易被利用产生安全问题，若无业务需求应被禁用</li><li>敏感信息使用POST而不是GET，否则URL被多种方式记录造成信息泄露</li><li>TRACE在生产环境中应被禁用，XSS攻击可利用其绕过Cookie的HttpOnly策略</li><li>HEAD可被DDos攻击利用，HEAD与GET所消耗服务端计算资源一样，而HEAD所消耗服务端网络出方向带宽较少，不会超过警阈值，计算资源却被耗尽</li><li>Web服务器支持CONNECT时，可建立外网穿透内网的通道</li></ul><h3 id="http响应" tabindex="-1"><a class="header-anchor" href="#http响应"><span>HTTP响应</span></a></h3><blockquote><p>响应与请求大版本号要一致</p></blockquote><table><thead><tr><th>状态码</th><th>说明</th></tr></thead><tbody><tr><td>100~199</td><td>请求成功但未完成操作</td></tr><tr><td>200~299</td><td>响应完成</td></tr><tr><td>300~399</td><td>跳转</td></tr><tr><td>400~499</td><td>客户端请求错误</td></tr><tr><td>500~599</td><td>服务端出错</td></tr></tbody></table><blockquote><p>漏洞：响应头以&quot;\\r\\n&quot;分割，当请求内容出现在响应头将可注入</p></blockquote><h3 id="版本" tabindex="-1"><a class="header-anchor" href="#版本"><span>版本</span></a></h3><ul><li><p>HTTP/1.0：</p><ul><li><p>组成：</p><ol><li><p>User-Agent：访问者客户端类型</p></li><li><p>Referer：发起请求的URL</p></li></ol></li><li><p>漏洞：</p><ol><li>User-Agent中插入XSS Payload对后台日志分析平台盲打</li><li>旧版本Flash可伪造Referer，现只可修改为同源</li></ol></li></ul></li><li><p>HTTP/1.1：</p><ul><li>新增： <ol><li>一个TCP连接可完成多个HTTP请求</li><li>支持管线化，客户端无需等待上一个请求，服务端按序回应</li><li>HOST：物理机多个虚拟机共用一个IP，HOST传递主机名；1.0一个服务器对应一个IP</li><li>Keep-Alive：长连接减少多次连接延迟，1.0短连接自动断开</li><li>Range：请求部分资源，避免返回完整资源造成资源浪费，返回码206</li><li>Content-Length：请求体长</li><li>Transfer-Encoding：请求体长不可预估</li></ol></li><li>漏洞： <ol><li>HTTP Flood可利用少量的TCP发送大量HTTP请求</li><li>当没有明确配置网站域名时，可被XSS利用</li></ol></li></ul></li><li><p>HTTP/2：</p><ul><li>新增： <ol><li>多路复用：解决1.0先进先出拥塞问题</li><li>数据流：每个请求对应的所有数据包为一个数据流，ID标识，解决无序问题</li><li>优先级：提高重要请求优先级</li><li>头部压缩：头部信息重复用索引代替，采用哈夫曼编码</li><li>推送：服务器可以将未请求的静态资源随主页推送</li><li>不再以文本格式传输而是二进制</li><li>伪头：:authority、:methed、:path、:scheme、响应:status</li><li>帧长固定，废除Content-Length和Transfer-Encoding</li></ol></li></ul></li><li><p>HTTP/3：部分应用底层HTTP库未升级，支持网站不多</p><ul><li>新增： <ol><li>不再使用TCP，改用UDP的QUIC协议，实现TCP类似功能的同时，还能随应用更新快速更新协议，根据需求选择QUIC库</li><li>使用64比特随机数为连接ID，不会因为IP改变导致连接中断</li><li>限制了客户端首包大小，并对响应包证书压缩，减小放大比例，返回数据量最多为客户端3倍</li></ol></li><li>漏洞： <ol><li>大部分安全产品不支持QUIC会将HTTP/3作为普通UDP处理</li><li>服务端响应首包包含TLS证书使其远大于请求包，实现UDP反射放大攻击</li></ol></li></ul></li></ul><h2 id="web基础" tabindex="-1"><a class="header-anchor" href="#web基础"><span>Web基础</span></a></h2><h3 id="代理" tabindex="-1"><a class="header-anchor" href="#代理"><span>代理</span></a></h3><p>正向代理：客户端指定代理</p><p>反向代理：服务端CDN、WAF、负载均衡</p><h3 id="结构" tabindex="-1"><a class="header-anchor" href="#结构"><span>结构</span></a></h3><p>DOM(文本对象模型)树状结构</p><img src="'+p+'" alt="image-20240816130953317" style="zoom:50%;"><h3 id="动态交互" tabindex="-1"><a class="header-anchor" href="#动态交互"><span>动态交互</span></a></h3><p>JavaScript：动态类型语言，现代浏览器唯一操作DOM的编程语言，不利于编写大型复杂应用</p><p>TypeScript：JavaScript超集，支持静态数据类型，更好的面向对象开发，可编译为JavaScript在浏览器运行</p><h2 id="浏览器安全" tabindex="-1"><a class="header-anchor" href="#浏览器安全"><span>浏览器安全</span></a></h2><h3 id="同源策略" tabindex="-1"><a class="header-anchor" href="#同源策略"><span>同源策略</span></a></h3><p>限制JavaScript不能读取和操作其它源资源，可展示执行其他源资源但不能获取详细数据</p><blockquote><p>同源：协议+主机名+端口相同</p></blockquote><h4 id="跨域dom互访" tabindex="-1"><a class="header-anchor" href="#跨域dom互访"><span>跨域DOM互访</span></a></h4><h5 id="document-domain" tabindex="-1"><a class="header-anchor" href="#document-domain"><span>document.domain</span></a></h5><blockquote><p>将网页中document.domain修改为同源</p></blockquote><ol><li>只可修改为当前域名或父域</li><li>修改后端口号为null，端口限制将可绕过</li><li>需修改当前和子域才可生效，端口都为null</li></ol><table><thead><tr><th>URL</th><th>当前页面document.domain</th><th>iframe中URL</th><th>iframe页面document.domain</th><th>结果</th></tr></thead><tbody><tr><td><a href="https://www.abc.cn" target="_blank" rel="noopener noreferrer">https://www.abc.cn</a></td><td><a href="http://abc.cn" target="_blank" rel="noopener noreferrer">abc.cn</a></td><td><a href="https://www.abc.cn:8080" target="_blank" rel="noopener noreferrer">https://www.abc.cn:8080</a></td><td><a href="http://abc.cn" target="_blank" rel="noopener noreferrer">abc.cn</a></td><td>允许访问</td></tr><tr><td><a href="https://www.abc.cn" target="_blank" rel="noopener noreferrer">https://www.abc.cn</a></td><td><a href="http://abc.cn" target="_blank" rel="noopener noreferrer">abc.cn</a></td><td><a href="http://www.abc.cn" target="_blank" rel="noopener noreferrer">http://www.abc.cn</a></td><td><a href="http://abc.cn" target="_blank" rel="noopener noreferrer">abc.cn</a></td><td>禁止访问</td></tr><tr><td><a href="https://www.abc.cn" target="_blank" rel="noopener noreferrer">https://www.abc.cn</a></td><td><a href="http://abc.cn" target="_blank" rel="noopener noreferrer">abc.cn</a></td><td><a href="https://www.abc.cn" target="_blank" rel="noopener noreferrer">https://www.abc.cn</a></td><td></td><td>禁止访问</td></tr><tr><td><a href="https://www.abc.cn" target="_blank" rel="noopener noreferrer">https://www.abc.cn</a></td><td><a href="http://abc.cn" target="_blank" rel="noopener noreferrer">abc.cn</a></td><td><a href="https://www.abc.cn" target="_blank" rel="noopener noreferrer">https://www.abc.cn</a></td><td></td><td>禁止访问</td></tr></tbody></table><ul><li>漏洞：子域安全性对当前域名影响极大</li></ul><h5 id="window-name" tabindex="-1"><a class="header-anchor" href="#window-name"><span><a href="http://window.name" target="_blank" rel="noopener noreferrer">window.name</a></span></a></h5><blockquote><p>窗口window.name设置后跨域仍然保留</p></blockquote><ul><li>漏洞：访问恶意网站将泄露敏感数据，因此部分浏览器跳转时置空属性值</li></ul><h5 id="window-postmessage" tabindex="-1"><a class="header-anchor" href="#window-postmessage"><span>window.postMessage</span></a></h5><blockquote><p>窗口之间发送消息，可指定接收源与发送源</p></blockquote><ul><li>漏洞：未对源进行验证则易被攻击</li></ul><h4 id="跨域访问服务端" tabindex="-1"><a class="header-anchor" href="#跨域访问服务端"><span>跨域访问服务端</span></a></h4><h5 id="jsonp" tabindex="-1"><a class="header-anchor" href="#jsonp"><span>JSONP</span></a></h5><blockquote><p>跨域执行JavaScript代码不受限制，只支持GET请求</p></blockquote><h6 id="方式" tabindex="-1"><a class="header-anchor" href="#方式"><span>方式</span></a></h6><ol><li><p>对JSON数据前后进行填充使其变为JavaScript代码</p><blockquote><p>提前定义好回调函数再通过&lt;script src=&quot;JSONP地址&quot;&gt;&lt;/script&gt;载入代码</p></blockquote></li><li><p>将JSON数据赋值变量</p></li></ol><h6 id="漏洞" tabindex="-1"><a class="header-anchor" href="#漏洞"><span>漏洞</span></a></h6><ol><li><p>任何网站都可载入JSONP获取其中数据，JSONP劫持、只读型CSRF</p><blockquote><p>方案：严格检验Referer确保可信或使用随机Token</p></blockquote></li><li><p>可不发送Referer，通过Referrer-Policy头或&lt;script&gt;标签中加上referrerPolicy=&quot;no-referrer&quot;</p><blockquote><p>方案：服务端拒绝不带Referer头的JSONP请求</p></blockquote></li><li><p>恶意构造回调函数</p><blockquote><p>方案：响应头设置Content-Type为application/javascript</p></blockquote></li><li><p>开发人员在无需跨域接口加上了JSONP需求，在URL添加参数&quot;callback=func&quot;或修改参数&quot;format=json&quot;、&quot;format=xml&quot;为jsonp将造成JSONP劫持</p></li></ol><h5 id="跨域资源共享cors" tabindex="-1"><a class="header-anchor" href="#跨域资源共享cors"><span>跨域资源共享CORS</span></a></h5><h6 id="类型" tabindex="-1"><a class="header-anchor" href="#类型"><span>类型</span></a></h6><ul><li><p>简单请求：浏览器发送请求带上Origin头，服务端返回指示可访问源，浏览器以此判断请求是否成功</p><blockquote><p>HTML表单提交请求，如GET、HEAD、POST</p></blockquote><figure><img src="'+s+'" alt="image-20240817131807571" tabindex="0" loading="lazy"><figcaption>image-20240817131807571</figcaption></figure></li><li><p>复杂请求：发送请求前浏览器OPTIONS方法发送预检请求，服务端允许后发送请求</p><blockquote><p>请求方法可能对服务器产生副作用时</p></blockquote><figure><img src="'+c+'" alt="image-20240817140231108" tabindex="0" loading="lazy"><figcaption>image-20240817140231108</figcaption></figure></li></ul><h6 id="请求头" tabindex="-1"><a class="header-anchor" href="#请求头"><span>请求头</span></a></h6><p>Origin：当前源</p><p>Access-Control-Request-Method：需要的使用方法</p><p>Access-Control-Request-Headers：需要用到的HTTP头</p><h6 id="响应头" tabindex="-1"><a class="header-anchor" href="#响应头"><span>响应头</span></a></h6><p>Access-Control-Allow-Method：允许方法</p><p>Access-Control-Allow-Headers：允许头</p><p>Access-Control-Allow-Origin：允许源，为“ * ”则不允许携带凭证信息，为“ null ”则影响Origin为null</p><blockquote><p>漏洞：</p><ol><li>为null则任意本地文件、恶意网站Data URL、沙盒化iframe载入的页面都能访问当前源</li><li>开发人员调用请求中的Origin构建并允许携带凭证信息</li></ol></blockquote><p>Access-Control-Allow-Credentials：能否携带凭证信息</p><h5 id="私有网络访问" tabindex="-1"><a class="header-anchor" href="#私有网络访问"><span>私有网络访问</span></a></h5><blockquote><p>浏览器根据IP划分网络区域：公共网络、私有网络、本地设备，向私密性更高网络区域发起预检请求</p></blockquote><h5 id="websocket" tabindex="-1"><a class="header-anchor" href="#websocket"><span>WebSocket</span></a></h5><h6 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h6><ol><li>全双工通信</li><li>防火墙一般放行</li><li>使用长连接，认证通过后无需携带凭证</li></ol><h6 id="漏洞-1" tabindex="-1"><a class="header-anchor" href="#漏洞-1"><span>漏洞</span></a></h6><ol><li><p>不受同源策略约束</p><blockquote><p>方案：检验请求头Origin是否在白名单</p></blockquote></li><li><p>CSRF</p><blockquote><p>为会话随机分配Token，握手检验Token是否正确</p></blockquote></li></ol><h3 id="多进程架构" tabindex="-1"><a class="header-anchor" href="#多进程架构"><span>多进程架构</span></a></h3><p>单个页面或组件崩溃不会影响浏览器</p><img src="'+d+'" alt="image-20240814174407348" style="zoom:50%;"><h3 id="沙盒机制" tabindex="-1"><a class="header-anchor" href="#沙盒机制"><span>沙盒机制</span></a></h3><p>将不可信代码在隔离环境运行，防止漏洞进一步被利用，如需调用外部数据需经API严格检测</p><img src="'+h+'" alt="image-20240815120122419" style="zoom:50%;"><p>站点隔离：不同站点放在不同进程中渲染，即不同沙盒中</p><img src="'+b+'" alt="image-20240815142528293" style="zoom:50%;"><h3 id="xss保护" tabindex="-1"><a class="header-anchor" href="#xss保护"><span>XSS保护</span></a></h3><p>黑名单：检测请求中是否含有可疑代码，并检测响应中是否含有相同代码</p><ul><li>XSS Filter：微软</li><li>XSS Auditor：Chrome、Safari</li></ul><p>白名单：明确指定哪些资源可信允许加载</p><ul><li>CSP：Firefox</li></ul><p>CSP：服务端返回一个含有Content-Security-Policy的HTTP头，描述应当遵守的策略，由浏览器执行，主流浏览器都支持</p><h3 id="隐私策略" tabindex="-1"><a class="header-anchor" href="#隐私策略"><span>隐私策略</span></a></h3><ol><li><p>P3P：网站声明采集用户数据类型与用途，与用户浏览器设定策略进行对比判断是否符合要求</p><blockquote><p>废弃原因：缺乏监管，网站主没有义务声明详细，用户操作门槛高</p></blockquote></li><li><p>DNT：用户设置浏览器表明自己不希望被追踪</p><blockquote><p>废弃原因：缺乏监管，没有规定合理追踪程度，影响收益</p></blockquote></li><li><p>GPC：由法律强制执行标准</p><blockquote><p>未全面实施</p></blockquote></li><li><p>DoH：通过HTTPS进行域名解析，数据加密</p><blockquote><p>漏洞：封禁提供服务IP回退DNS</p></blockquote></li><li><p>DoT：与DoH类似，端口853</p><blockquote><p>漏洞：封禁端口回退DNS</p></blockquote></li></ol><p>Safari：周期性删除追踪Cookie，可使用代理IP防止IP追踪</p><p>Chrome：隐私沙盒，用户隐私由浏览器接管，网站通过API调用，废除第三方Cookie</p><p>Brave：修改提供指纹的API，使不同系统类似或每次结果随机</p><h3 id="恶意拦截" tabindex="-1"><a class="header-anchor" href="#恶意拦截"><span>恶意拦截</span></a></h3><p>Safe Browsing：谷歌、Firefox、Safari；拦截恶意网站与程序</p><p>SmartScreen：微软；拦截恶意网站与程序，提供高信誉文件名单</p><p>EV SSL证书：不仅验证域名所有权，还对申请者身份真实性进行检验，高信誉用户通过</p><h3 id="密码检测" tabindex="-1"><a class="header-anchor" href="#密码检测"><span>密码检测</span></a></h3><p>检验密码强度，与已泄露的密码库比对</p><h3 id="域名防护" tabindex="-1"><a class="header-anchor" href="#域名防护"><span>域名防护</span></a></h3><p>对于某些域名转换为域名代码显示，防止域名同形异义词攻击</p><img src="'+u+'" alt="image-20240816081443537" style="zoom:50%;"><h2 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie"><span>Cookie</span></a></h2><p>第一方Cookie：网站直接植入，用于标识用户身份</p><p>第三方Cookie：网站插入另一个网站内容，用于追踪访问者偏好分析投递广告</p><img src="'+m+`" alt="image-20240816082440057" style="zoom:50%;"><h3 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h3><h4 id="domain" tabindex="-1"><a class="header-anchor" href="#domain"><span>Domain</span></a></h4><blockquote><p>指定Cookie生效域名</p></blockquote><ul><li><p>特点：</p><ol><li><p>”.“开头对当前域名与子域名生效，目前主流浏览器不带也在子域生效</p></li><li><p>服务端Set-Cookie写入Cookie，默认只对当前域名生效，即Host-Only Cookie；客户端JavaScript写入只能指定当前或父域名</p></li></ol></li><li><p>漏洞：</p><ol><li>不包含端口信息，域名隔离不受端口限制，可能从应用泄露Cookie</li></ol></li></ul><h4 id="path" tabindex="-1"><a class="header-anchor" href="#path"><span>Path</span></a></h4><blockquote><p>指定Cookie生效路径</p></blockquote><ul><li><p>特点：</p><ol><li>在当前和子路径生效，默认当前路径</li></ol></li><li><p>漏洞：</p><ol><li><p>同源下DOM可互访，一个页面可以读取另一个路径页面Cookie</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;iframe id=&quot;test&quot; src=&quot;/admin/&quot; width=0 height=0&gt;&lt;/frame&gt;</span></span>
<span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>window.onload=function(){</span></span>
<span class="line"><span>	alert(document.getElementById(&#39;test&#39;).comtentDocument.cookie);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li></ul><h4 id="expires" tabindex="-1"><a class="header-anchor" href="#expires"><span>Expires</span></a></h4><blockquote><p>Cookie有效期</p></blockquote><ul><li>特点： <ol><li>到期删除Cookie，默认关闭浏览器删除</li><li>浏览器恢复上次关闭页面变相将临时Cookie变为永久Cookie</li></ol></li><li>漏洞： <ol><li>超过浏览器对该站点的最大Cookie数时会删除旧Cookie</li></ol></li></ul><h4 id="httponly" tabindex="-1"><a class="header-anchor" href="#httponly"><span>HttpOnly</span></a></h4><blockquote><p>Cookie只能在HTTP/HTTPS传输</p></blockquote><ul><li>特点： <ol><li>JavaScript无法读取Cookie</li></ol></li><li>漏洞： <ol><li>通过调试或报错回显信息</li></ol></li></ul><h4 id="secure" tabindex="-1"><a class="header-anchor" href="#secure"><span>Secure</span></a></h4><blockquote><p>Cookie只能HTTPS传输</p></blockquote><ul><li>特点： <ol><li>非加密传输设置失败</li></ol></li></ul><h4 id="samesite" tabindex="-1"><a class="header-anchor" href="#samesite"><span>SameSite</span></a></h4><blockquote><p>跨站是否携带Cookie，写入与带出</p></blockquote><ul><li>None：不做限制，要求带有Secure</li><li>LAX：默认配置，链接到其他网站、GET方法携带Cookie</li><li>Strict：禁止跨站携带</li></ul><img src="`+k+'" alt="image-20240816100627222" style="zoom:50%;"><p>公共后缀列表：<a href="https://publicsuffix.org" target="_blank" rel="noopener noreferrer">https://publicsuffix.org</a></p><h4 id="sameparty" tabindex="-1"><a class="header-anchor" href="#sameparty"><span>SameParty</span></a></h4><blockquote><p>多个网站定义为一个可信站点集合，同一集合可携带Cookie</p></blockquote><ul><li>特点： <ol><li>集合定义在/.wll-known/first-party-set中</li><li>目前只有Chrome支持</li></ol></li></ul><h3 id="安全使用" tabindex="-1"><a class="header-anchor" href="#安全使用"><span>安全使用</span></a></h3><h4 id="属性设置" tabindex="-1"><a class="header-anchor" href="#属性设置"><span>属性设置</span></a></h4><ol><li>在HTTPS应用中设置Secure</li><li>无需子域名读取Cookie时不设置Domain；如需读取则评估子域安全性</li><li>重要Cookie设置HttpOnly</li><li>明确指定SameSite</li></ol><h4 id="cookie前缀" tabindex="-1"><a class="header-anchor" href="#cookie前缀"><span>Cookie前缀</span></a></h4><ul><li>__Host-：Cookie需满足条件浏览器才会接收：1.带有Secure；2.不包含Domain；3.HTTPS连接；4.Path为“/”，部分浏览器无需指定</li><li>__Secure-：限制条件：1.带有Secure；2.HTTPS连接</li></ul><h4 id="保密性与完整性" tabindex="-1"><a class="header-anchor" href="#保密性与完整性"><span>保密性与完整性</span></a></h4><ol><li><p>尽量将不同应用部署与不同子域名，并使用Cookie前缀绑定域名</p></li><li><p>不将重要数据写入Cookie，写入应当加密或签名</p></li></ol><h2 id="会话安全" tabindex="-1"><a class="header-anchor" href="#会话安全"><span>会话安全</span></a></h2><h3 id="会话管理" tabindex="-1"><a class="header-anchor" href="#会话管理"><span>会话管理</span></a></h3><ol><li>会话ID随机：SessionID完全随机且长</li><li>过期与失效：由服务端定义会话的过期时间和标记失效SessionID</li><li>绑定客户端：会话与User-Agent、IP等绑定</li><li>安全传输：避免Cookie泄露</li><li>JWT：客户端存储会话，服务端对Token进行验证，但有效期只能在服务端发放时设置，且密钥泄露将可签发任意账号JWT</li></ol><h3 id="固定会话攻击" tabindex="-1"><a class="header-anchor" href="#固定会话攻击"><span>固定会话攻击</span></a></h3><blockquote><p>给访问者新的SessionID，将杜绝固定会话攻击</p></blockquote><img src="'+f+'" alt="image-20240816125807372" style="zoom:50%;">',135))])}const C=t(g,[["render",T]]),P=JSON.parse('{"path":"/posts/learning/Web%E5%AE%89%E5%85%A8.html","title":"Web安全简介","lang":"zh-CN","frontmatter":{"icon":"book-open-reader","date":"2024-08-16T00:00:00.000Z","description":"d2Vi5a6J5YWo","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Web安全简介\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-16T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-27T11:16:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"云烟驻\\",\\"url\\":\\"https://yunyin.pages.dev\\"}]}"],["meta",{"property":"og:url","content":"https://gitee.com/shadow-of-cloud/my-docs/posts/learning/Web%E5%AE%89%E5%85%A8.html"}],["meta",{"property":"og:site_name","content":"博客主页"}],["meta",{"property":"og:title","content":"Web安全简介"}],["meta",{"property":"og:description","content":"d2Vi5a6J5YWo"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-27T11:16:37.000Z"}],["meta",{"property":"article:published_time","content":"2024-08-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-27T11:16:37.000Z"}]]},"git":{"createdTime":1745752597000,"updatedTime":1745752597000,"contributors":[{"name":"云影","username":"","email":"14521425+shadow-of-cloud@user.noreply.gitee.com","commits":1}]},"readingTime":{"minutes":11.31,"words":3392},"filePathRelative":"posts/learning/Web安全.md","excerpt":"\\n<p>d2Vi5a6J5YWo</p>\\n\\n","autoDesc":true}');export{C as comp,P as data};
